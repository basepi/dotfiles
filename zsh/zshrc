# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=$HOME/.zsh-custom

# PATH (yes, it's messy)
export PATH=/opt/homebrew/bin:/opt/homebrew/sbin:/home/linuxbrew/.linuxbrew/bin:/usr/local/bin:/usr/local/sbin:/usr/local/include:/usr/local/lib:/usr/bin:/usr/include:/usr/lib:/Library/TeX/texbin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin


# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git fzf vi-mode zsh-autosuggestions zsh-prompt-benchmark)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Exports

# General
export TERM="xterm-256color"
if [[ `uname -s` == *CYGWIN* ]]; then
    export TERM="cygwin"
fi
export DISPLAY=:0.0

export CLICOLOR='Yes'
# I use dircolors now, but this LSCOLORS is easier on the eyes than the default
# if you're stuck without 256 colors in ls.
#export LSCOLORS='cxfxexdxbxegedabagacad'

# Unicode support
export LANG=en_US.UTF-8
# ASCII version
#export LANG=C

# Editor settings
export EDITOR=vim
export VISUAL=vim
export SVN_EDITOR=vim

# GREP
export GREP_COLOR='1;32'

# Pager (less)
export PAGER=less
export LC_CTYPE=en_US.UTF-8

# Pip
export PIP_REQUIRE_VIRTUALENV=true

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Aliases

# Sudo
alias svim='sudo vim'
alias stail="sudo tail"

# Package managers
alias apt-get='sudo apt-get'
alias aptitude='sudo aptitude'

# Misc
alias rapache="sudo /etc/init.d/apache2 reload"
alias ports="sudo lsof -i -P -sTCP:LISTEN"

# Super user
alias _='sudo'

# Show history
alias history='fc -l'

# List direcory contents
alias ls="ls --color=always -h"
alias la='ls -ahf --color=always'
alias lsa='ls -lah --color=always'
alias l='ls -la --color=always'
alias ll='ls -l --color=always'
alias sl='ls -h --color=always' # In case of screw-ups

# grep
alias grep='grep --color=auto'

# Sometimes I work on vi-only systems -- this keeps me sane on the switch
alias vi="vim"

# https://twitter.com/liamosaur/status/506975850596536320
alias fuck='sudo $(fc -ln -1)'

# LXC Parasite host management
alias lxcup='VBoxManage startvm "LXC Host" --type headless'
alias lxcdown='VBoxManage controlvm "LXC Host" poweroff'

alias mustafar='mosh basepi@mustafar.basepi.net -- /home/linuxbrew/.linuxbrew/bin/tmux new-session -A -D -s base'
alias smustafar='ssh basepi@mustafar.basepi.net -t -- /home/linuxbrew/.linuxbrew/bin/tmux new-session -A -D -s base'

alias ttt='/home/linuxbrew/.linuxbrew/bin/tmux new-session -A -D -s base'

alias sa='ssh-add --apple-use-keychain --apple-load-keychain'

alias glg="git log --graph --pretty=format:'%Cblue%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"

# mkdir & cd to it
function mcd() {
  mkdir -p "$1" && cd "$1";
}

if [[ `uname` == "Darwin" ]]; then
    # Mac OS X specific tweaks.

    # Use gls instead of ls, assuming coreutils is installed, for 256 colors in ls
    alias ls='gls --color=always -h'
    alias la='gls --color=always -ah'
    alias lsa='gls --color=always -lah'
    alias l='gls --color=always -la'
    alias ll='gls --color=always -l'
    alias sl='gls --color=always -h' # In case of screw-ups (which pretty well describes me)

    alias sed='gsed'

    alias tar='gtar'
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

if type "keychain" > /dev/null; then
    export KEYCHAIN=true
    eval `keychain --agents ssh,gpg --eval --timeout 86400 id_rsa 0x6EC5C787D71F663F`
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

function extract() {
  unset REMOVE_ARCHIVE

  if test "$1" = "-r"; then
      REMOVE=1
      shift
  fi
  if [[ -f $1 ]]; then
    case $1 in
      *.tar.bz2) tar xvjf $1;;
      *.tar.gz) tar xvzf $1;;
      *.tar.xz) tar xvJf $1;;
      *.tar.lzma) tar --lzma -xvf $1;;
      *.bz2) bunzip $1;;
      *.rar) unrar $1;;
      *.gz) gunzip $1;;
      *.tar) tar xvf $1;;
      *.tbz2) tar xvjf $1;;
      *.tgz) tar xvzf $1;;
      *.zip) unzip $1;;
      *.Z) uncompress $1;;
      *.7z) 7z x $1;;
      *) echo "'$1' cannot be extracted via >extract<";;
    esac

    if [[ $REMOVE_ARCHIVE -eq 1 ]]; then
        echo removing "$1";
        /bin/rm "$1";
    fi

  else
    echo "'$1' is not a valid file"
  fi
}

unsetopt SHARE_HISTORY

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/basepi/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/basepi/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/basepi/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/basepi/google-cloud-sdk/completion.zsh.inc'; fi

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# zsh-autosuggestions
bindkey '^ ' autosuggest-accept
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
